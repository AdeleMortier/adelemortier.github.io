\chapter[Oddness in non-scalar Hurford Disjunctions]{Oddness in non-scalar Hurford Disjunctions\footnotemark}\label{chap:hurford-disj}
\footnotetext{This Chapter is partly based on \citettoappear{HenotMortier2024a}, and hopefully spells out the model and arguments more extensively and explicitly. I would like to thank the audience and reviewers of SuB29 and of the 2024 BerlinBrnoVienna Workshop for relevant questions, datapoints and suggestions regarding earlier iterations of this project.}

This Chapter constitutes a direct follow-up of Chapter \ref{chap:redundancy}, and proposes to generalize the \textsc{Non-Redundancy} constraint introduced in that Chapter, in order to account for different varieties of Hurford Disjunctions. Specifically, we will argue that the proper notion of equivalence between Qtrees thatfeeds \textsc{Q-Non-Redundancy} is not equality (of nodes and edges), but instead, structural equality combined with equality between minimal strategies of inquiry -- defined in terms of path from the CS-root to verifying nodes.

\section{Introducing Huford Disjunctions}
In Chapter \ref{chap:redundancy}, we introduced a new \textsc{Non-Redundancy} constraint accounting for a problematic dataset that previous approaches to oddness could not fully capture without jeopardizing results obtained on other famously odd sentences. Among those famously odd sentences, are Hurford Disjunctions \citep{Hurford1974}, henceforth \textbf{HD}, exemplified in (\ref{ex5:hd}). HDs typically feature contextually entailing disjuncts (abbreviated $p^+ \vDash p$), and are generally odd regardless of the order of the weak ($p$) vs. strong ($p^+$) disjunct.\footnote{A notable exception is when the two disjuncts are the same \textit{modulo} scalemate expressions, such as \textit{some} vs. \textit{all}; in that case, HDs may be rescued from infelicity (\cite{Gazdar1979,Singh2008b,Fox2018,Ippolito2019,HenotMortier2022} i.a.). We do not cover these cases here, but Chapters \ref{chap:scalarity} and \ref{chap:economy} provide an overview of the challenges raised by these ``scalar'' variants, and sketch solutions based on the current framework.}

\begin{exe}
	\ex \label{ex5:hd}
	\begin{xlist}
		\ex[\#] {SuB29 will take place in Noto\footnote{Noto is located in Italy and is where the main session of SuB29 was organized.} or Italy. \hfill $\pplus\vee \p$}\label{ex5:hd-sw}
		\ex[\#] {SuB29 will take place in Italy or Noto. \hfill $\p \vee \pplus$}\label{ex5:hd-ws}
	\end{xlist}
\end{exe}

Accounting for (\ref{ex5:hd}) in an explanatory way, i.e. without simply stating that disjunctions should not feature entailing disjuncts, is challenging. First, identifying a specific, well-motivated pragmatic principle susceptible to account for (\ref{ex5:hd}) is not necessarily easy (though, Chapter \ref{chap:redundancy}, Section \ref{sec4:previous-accounts}, already foreshadowed several potential solutions). Second, pre-theoretically similar instances of oddness seem to affect expressions in which disjuncts are not necessarily in a relation of contextual entailment. For instance, given that the Basque country encompasses Northern Central Spain and southwestern France, saying that SuB29 will take place in the Basque country is \textit{compatible} with saying that SuB29 will take place in France. Yet, the sentences in (\ref{ex5:hd-compatible})
\begin{exe}
	\ex \label{ex5:hd-compatible}
	\begin{xlist}
		\ex[\#] {SuB29 will take place in the Basque country\footnotemark{} or France.}\label{ex5:hd-compatible-1}
		\ex[\#] {SuB29 will take placein France or in the Basque country\footnotemark{} or France.}\label{ex5:hd-compatible-2}
	\end{xlist}
\end{exe} 


HERE REPEAT NON-RDEUNDANCY AND SHOW THE ISSUE. 


(\ref{ex:super-redundancy}) predicts the HDs in (\ref{ex:hd}) to be deviant: given $S=$(\ref{ex:hd-sw}-\ref{ex:hd-ws}) and  $C=p^+$, no matter what $D$ is, $S_{Str(C, D)} = (p^+\wedge D) \vee p$ is equivalent to $p=(S)^-_C$. Assuming implications are material, (\ref{ex:super-redundancy}) also predicts the HC (\ref{ex:hc-sw}) to be deviant: given $C=\neg p^+$, no matter what $D$ is, $S_{Str(C, D)} = \neg(p^+\wedge D) \rightarrow p \equiv (p^+ \wedge D) \vee p$, which is equivalent to $p=(S)^-_C$. In that case, it was crucial that the local strengthening of $C=p^+$ remained conjunctive under negation. (\ref{ex:hc-ws}) on the other hand, is predicted to be fine. (\ref{ex:hc-ws}) features two candidates for $C$: $p$ and $\neg p^+$.  Given $C = p$, and setting $D$ to $\bot$, we have, $S_{Str(C, D)} = (p \wedge \bot) \rightarrow \neg p^+ \equiv \neg p \vee \top \vee \neg p^+ \equiv \top$ which is not equivalent to $\neg p^+=(S)^-_C$. Given $C=\neg p^+$, and setting $D$ to $\top$, we have $S_{Str(C, D)} = p \rightarrow \neg(p^+ \wedge \top) \equiv \neg p \vee \neg p^+$ which is not equivalent to $p=(S)^-_C$. So (\ref{ex:hc-ws}) is not super-redundant. 

\subsection{Redundancy}
As briefly discussed in section \ref{sec:prev-approaches}, \textsc{Redundancy}-based approaches to Hurford Sentences (\citeauthor{Meyer2013}, \citeyear{Meyer2013}; \citeauthor{Katzir2014}, \citeyear{Katzir2014}; \citeauthor{Mayr2016}, \citeyear{Mayr2016} i.a.) build on the general idea that a felicitous sentence should not have the same contribution to a conversation as one of its formal simplifications. The major issue with most previous \textsc{Redundancy}-based approaches (the notable exception being \citenp{Kalomoiros2024}) is that they rely on sentence \textit{structure} and logical meaning at two independent levels. Therefore, they cannot discriminate between HDs and HCs under the material implication hypothesis, and, even assuming conditionals are non-material, cannot derive the contrast between the two HCs (\ref{ex5:hc-sw}) and (\ref{ex5:hc-ws}). However, under our QuD-informed view, disjunctions and implications do have  different pragmatic contributions. We now show that making \textsc{Redundancy} sensitive to such a difference allows to derive a contrast between HDs and HCs. We update \textsc{Redundancy} by stating that a Qtree evoked by a sentence is redundant if it is equivalent to a Qtree evoked by one the sentence's formal simplifications. Equivalence between Qtrees is defined in terms of both tree structure and optimal strategies of inquiry, i.e. minimal sets of paths from the CS-root to each existing verifying node. Two Qtrees are equivalent, if their structure and optimal strategies of inquiry are the same. Considering optimal strategies of inquiry cashes out the intuition that inquiring about $p^+$ settles $p$ ``for free'', in the sense that any path to $p^+$ in a given Qtree, contains a path to $p$. \textsc{Redundancy} is spelled out in (\ref{ex5:q-redundancy}); (\ref{ex5:formal-simplification})-(\ref{ex5:min-verifying-paths}) unpack the definition.

\begin{exe}
	\ex 
	\begin{xlist}
		\ex {\textit{\textsc{Q-Redundancy}}. Let $X$ be a LF and let $Qtrees(X)$ be the set of the Qtrees compatible with $X$. For any $T \in Qtrees(X)$, $T$ is deemed \textsc{Q-Redundant} with respect to $X$ iff there exists a formal simplification of $X$, $X'$, and $T' \in Qtrees(X')$, such that $\mathcal{R}(T)\equiv\mathcal{R}(T')$.}\label{ex5:q-redundancy}
		\ex {\textit{Formal simplification}. $X$ is a formal simplification of $X$ if $X'$ can be derived from $X$ \textit{via} a series of constituent-to-subconstituent substitutions.}\label{ex5:formal-simplification}
		\ex {Qtree equivalence relation $\equiv$. $T \equiv T'$ iff $T$ and $T'$ have same structure and same set of maximal verifying paths.}\label{ex5:q-equivalence}
		\ex {\textit{Qtree reduction function $\mathcal{R}$}. $\mathcal{R}(T)$ is the tree obtained from $T$ by removing all empty nodes and recursively replacing only children by their mother, percolating the ``verifying'' property as needed.\footnote{This means that, if the only child deletion operation targets a mother node $M$ and its only child node $N$, the output is $M$ and is verifying iff $M$ \textit{or} $N$ is verifying.}}\label{ex5:q-reduction}
		\ex {\textit{Set of verifying paths $\mathbb{P}(T)$ of a Qtree $T$}. Set of paths starting from the root of $T$, and such that each path finishes in each $N \in \mathbb{N}^+(T)$.}\label{ex5:verifying-paths}
		\ex {\textit{Path containment. } Two paths $p_1$ and $p_2$ are in a containment relation ($p_1 \subseteq_{\mathbb{P}} p_2$) if $p_1$ (seen as an ordered list, i.e. a string, of nodes) is a prefix of $p_2$.}\label{ex5:path-containment}
		\ex {\textit{Set of \textit{minimal} verifying paths $\mathbb{P}^*(T)$ of a Qtree $T$}. Set of minimal elements of $\mathbb{P}(T)$ w.r.t. the path containment relation.}\label{ex5:min-verifying-paths}
	\end{xlist}
\end{exe}

This provides an explanation as to why the only Qtree compatible with the HDs (\ref{ex5:hd-sw}-\ref{ex5:hd-ws}), repeated in Figure \ref{fig5:qtree-noto-or-italy-redundant}, is redundant: it turns out to be equivalent (in terms of structure and maximal verifying paths) to a Qtree evoked by \textit{Sub29 will take place in Noto}, repeated in Figure \ref{fig5:qtree-noto-2-tiered-repeated}. The equality between the sets of minimal verifying paths for those two trees is justified in (\ref{ex5:minimal-path-equality-hd}).

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Italy}[\fbox{Noto}][Rome]] [France [Paris]] [UK [London]] [...]]
				\draw[color=orange, thick] (-.5, .2) -- (-2.3, -.4);
				\draw[->, color=orange, thick] (-2.3, -.4) -- (-2.9, -1.75);
				\draw[->, color=blue, thick] (-.5, 0) -- (-2.1, -.6);
				%\draw[->] (-.5, 0) [out=west, in=north] to (-2.1, -.6);
				%\draw[->] (-.5, .3) [out=west, in=north west] to (-2.9, -1.8);
		\end{forest}}
		\caption{Qtree for the HDs (\ref{ex5:hd-sw}-\ref{ex5:hd-ws}).}
		\label{fig5:qtree-noto-or-italy-redundant}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [Italy[\fbox{Noto}] [Rome]] [France[Paris]] [UK[London]] [...]]
				\draw[color=orange, thick] (-.5, 0) -- (-2.1, -.4);
				\draw[->, color=orange,thick] (-2.1, -.4) -- (-2.9, -1.6);
		\end{forest}}
		\caption{Qtree for \textit{Sub29 will take place in Noto}  (obtained from principle (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-tiered})).}\label{fig5:qtree-noto-2-tiered-repeated}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Italy}[\fbox{Noto}][Rome]] [France [\fbox{Paris}]] [UK [London]] [...]]
		\end{forest}}
		\caption{Qtree for the LDHDs (\ref{ex5:ldhd-ws}-\ref{ex5:ldhd-sw}).}
		\label{fig5:qtree-noto-or-paris-or-italy-redundant}
	\end{subfigure}
	\caption{Showing that the HDs (\ref{ex5:hd-sw}-\ref{ex5:hd-ws}) are \textsc{Q-Redundant}}
\end{figure} 
\begin{exe}
	\ex {$\mathbb{P}(\text{\ref{fig5:qtree-noto-or-italy-redundant}}) = \lbrace \textcolor{orange}{[CS, Italy, Noto]}, \textcolor{blue}{[CS, Italy]} \rbrace$\\
		$\mathbb{P}^*(\text{\ref{fig5:qtree-noto-or-italy-redundant}}) = \lbrace \textcolor{orange}{[CS, Italy, Noto]}\rbrace$, because $\textcolor{blue}{[CS, Italy]} \subseteq_{\mathbb{P}} \textcolor{orange}{[CS, Italy, Noto]}$\\
		$\mathbb{P}(\text{\ref{fig5:qtree-noto-2-tiered-repeated}}) = \lbrace \textcolor{orange}{[CS, Italy, Noto]} \rbrace = \mathbb{P}^*(\text{\ref{fig5:qtree-noto-2-tiered-repeated}})=\mathbb{P}^*(\text{\ref{fig5:qtree-noto-or-italy-redundant}})$}\label{ex5:minimal-path-equality-hd}
\end{exe}

This can be shown to extend to Long-Distance Hurford Disjunctions \cite{Marty2022}, which are derived from HDs by further disjoining the stronger disjunct with a proposition incompatible with the weaker disjunct. Such disjunctions, exemplified in (\ref{ex5:ldhd}), are predicted to give rise to Qtrees like the one in Figure \ref{fig5:qtree-noto-or-paris-or-italy-redundant}. This Qtree is redundant because it is equivalent to the Qtree evoked by the simplification of (\ref{ex5:ldhd-ws})/(\ref{ex5:ldhd-sw}) in (\ref{ex5:ldhd-simpl}).

\begin{exe}
	\ex \label{ex5:ldhd}
	\begin{xlist}
		\ex[\#] {Either SuB29 will take place in Italy, or it will take place in Noto or Paris.}\label{ex5:ldhd-ws}
		\ex[\#] {Either SuB29 will take place in Noto or Paris, or it will take place in Italy.}\label{ex5:ldhd-sw}
	\end{xlist}
	\ex[] {SuB29 will take place in Noto or Paris.}\label{ex5:ldhd-simpl}
\end{exe}

\begin{exe}
	\ex \label{ex5:ldhd}
	\begin{xlist}
		\ex[\#] {Jo either studied in \textcolor{blue}{Europe}, or in \textcolor{orange}{France} or in \textcolor{green}{New York}.
			\hfill \p{} $\vee$ (\pplus{} $\vee$ \r)}\label{ex5:ldhd-pos}
		\ex[\#] {Jo either does\textcolor{blue}{n't study in France}, or \textcolor{orange}{not in Europe} or in \textcolor{green}{Paris}.	\hfill \textbf{\textcolor{blue}{q}} $\vee$ (\textcolor{orange}{\textbf{q}$^+$} $\vee$ \r)\\
			with: \textbf{\textcolor{blue}{q}} := $\neg$\pplus; \textcolor{orange}{\textbf{q}$^+$} := $\neg$\p }\label{ex5:ldhd-neg}
	\end{xlist}
\end{exe}

We think that both (\ref{ex5:ldhd-pos}) and (\ref{ex5:ldhd-neg}) are degraded -- which is in itself interesting because SR predicts (\ref{ex5:ldhd-neg}) to be fine.



Regarding HCs, it can be shown that none of their Qtrees (given in Figures \ref{fig5:qtrees-if-not-noto-italy} and \ref{fig5:qtrees-if-italy-not-noto}) violate \textsc{Q-Redundancy}.\footnote{To justify this, let us review the Qtrees associated to the simplifications of (\ref{ex5:hc-sw}) and (\ref{ex5:hc-ws}). First, Qtrees for the simplifications \textit{Sub29 will take place in $\lbrace$Noto, Italy$\rbrace$}, and \textit{Sub29 will not take place in Noto}, shown in Figures \ref{fig5:qtrees-noto}, \ref{fig5:qtrees-italy} and \ref{fig5:qtrees-not-noto}, either have a different structure, or different maximal verifying paths as the Qtrees in Figures \ref{fig5:qtrees-if-not-noto-italy} and \ref{fig5:qtrees-if-italy-not-noto}. This stems from the intuition that the HDs (\ref{ex5:hc-sw}-\ref{ex5:hc-ws}) package information pertaining to both \textit{not Noto} and \textit{Italy}. Regarding the simplification of (\ref{ex5:hc-sw}) \textit{If SuB29 will take place in Noto, it will take place in Italy}, it is predicted, as per property (\ref{ex5:granularity-vacuous}), to give rise to the same Qtrees as \textit{Sub29 will take place in Noto}, which, as said above, do not trigger \textsc{Q-Redundancy}. Regarding the simplification of (\ref{ex5:hc-ws}) \textit{If SuB29 will take place in Italy, it will take place in Noto}, it is predicted to give rise to Qtrees structurally similar to those in Figure \ref{fig5:qtrees-if-italy-not-noto}, but whose verifying nodes support \textit{Noto} (instead of \textit{not Noto}), and as such cannot trigger \textsc{Q-Redundancy}.} To account for the infelicity of (\ref{ex5:hc-sw}), while retaining the felicity of (\ref{ex5:hc-ws}), we appeal to an updated definition of \textsc{Relevance}, introduced in the next section.\\

Before moving on, let us take stock and compare \textsc{Q-Redundancy} to earlier \textsc{Brevity}-related constraints. It is for example interesting to note that, while previous accounts typically deem disjunctions redundant because they happen to be contextually equivalent to their \textit{weaker} disjunct, \textsc{Q-Redundancy} does the opposite: an LF-Qtree pair is \textsc{Q-Redundant} because the Qtree turns out to be equivalent to that of a logically \textit{stronger} competitor. For instance, the only Qtree compatible with (\ref{ex5:hd-sw}-\ref{ex5:hd-ws}) is redundant because it is equivalent to a Qtree evoked by the simplification \textit{SuB29 will take place in Noto}, which is logically stronger than (\ref{ex5:hd-sw}-\ref{ex5:hd-ws}). This models a notion of ``inquisitive''  (as opposed to ``logical'') redundancy: once we inquire about a stronger eventuality (e.g., \textit{Noto}), inquiring about a weaker alternative to this eventuality (e.g., \textit{Italy}), becomes useless. Another thing to note, is that \textsc{Q-Redundancy} is relatively easy to violate: for a Qtree to be redundant given an LF evoking it, it is enough to find \textit{one} equivalent Qtree generated by \textit{one} simplification of the LF. In particular, the relevant simplification might give rise to other, non-equivalent Qtrees. We discuss this property of our model more in depth in \cite{HenotMortier2024b} and Chapter 3. We now proceed to define \textsc{Relevance} and explain how it captures the contrast in HCs.


\section{Capturing Hurford Disjunctions}\label{sec:hds}

\subsection{Questions evoked by disjunctive LFs}
Building on \citet{Simons2001,Zhang2022}; \citettoappear{HenotMortier2024b}, we submit that disjunctive LFs evoke questions pertaining to both disjuncts, \textit{in parallel}. In other words, disjuncts should mutually address each-other's questions. This is modeled by assuming that disjunction returns all possible unions of the Qtrees evoked by both disjuncts, filtering out the outputs that do not qualify at Qtrees. This is formulated in (\ref{ex:disj-qtrees}).

\begin{exe}
	\ex {\textit{Qtrees for disjunctive LFs.\footnotemark} A Qtree $T_{\vee}$ for $X \vee Y$ is obtained from a Qtree $T_X$ for $X$ and a Qtree $T_Y$ for $Y$ by:
		\begin{itemize}
			\item unioning the nodes, edges, and verifying nodes of $T_X$ and $T_Y$;
			\item returning the output only if it is a Qtree.
	\end{itemize}}\label{ex:disj-qtrees}
\end{exe}
\footnotetext{More formally: $Qtrees(X \vee Y) = \lbrace T_X \cup T_Y | T_X \cup T_Y \text{verifies (\ref{ex:qtree-def})} \wedge (T_X, T_Y) \in Qtrees(X) \times Qtrees(Y) \rbrace$, and $\mathbb{N}^+(T_{\vee}) = \mathbb{N}^+(T_{X}) \cup \mathbb{N}^+(T_{Y})$.}



(\ref{ex:disj-qtrees}) predicts that two Qtrees sharing the same CS can be properly disjoined iff they appear structurally parallel up to a certain level, and any further partitionings they independently introduce do not ``clash'' with each other.\footnote{We assume two Q-trees $T$ and $T'$ feature a bracketing clash iff there is $N \in T$ and $N' \in T'$ s.t. $N=N'$ but the sets of children of $N$ and $N'$ differ. We show that if $T$ and $T'$ exhibit such a clash, their disjunction is not a Q-tree. Let's call $C$ and $C'$ the sets of nodes of resp. $T$ and $T'$ that induce a bracketing clash; by assumption, $C$ and $C'$ are s.t. $C\neq C'$, and have mothers $N$ and $N'$ s.t. $N=N'$. Because $\vee$ achieves graph-union, $T\vee T'$ will have a node $N$ with $C\cup C'$ as children, and because $C\neq C'$, $C\cup C' \supset C, C'$. Given that both $C$ and $C'$ are partitions of $N$, $C\cup C'$ cannot be a partition of $N$. Conversely, if two Q-trees $T$ and $T'$ sharing the same CS as root are s.t. their union $T \cup T'$ is not a Qtree, it must be because $T$ and $T'$ had a bracketing clash. Indeed, under those assumptions, $T \cup T'$ not being a Qtree means one node $N$ in $T \cup T'$ is not partitioned by its children. Given $N$ is in $T \cup T'$, $N$ is also in $T$, $T'$, or both. If $N$ was only in, say, $T$, then it means $N$'s children are also only in $T$, but then, $T$ itself would have had a node not partitionned by its children, contrary to the assumption $T$ is a Qtree. The same holds \textit{mutatis mutandis} for $T'$, so, $N$ must come from \textit{both} $T$ and $T'$. Let us call $C$ and $C'$ the partitioning introduced by $N$ in resp. $T$ and $T'$. The fact $C$, $C'$, but not $C \cup C'$ partition $N$ entails $C\neq C'$, i.e. $T$ and $T'$ feature a bracketing clash.} This implies that two sentences evoking different levels of granularity (e.g., city-level vs. country level) can in principle be disjoined by picking Qtrees $T$ and $T'$ for resp. the finer-grained and coarser-grained disjunct, s.t. $T$, constitutes a refinement of $T'$ as per (\ref{ex:refinement-def}). The only Qtree compatible with (\ref{ex:hd-sw}) and (\ref{ex:hd-ws}), obtained in this way, is given in Figure \ref{tree:noto-or-italy}.

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Italy}[\fbox{Noto}][Rome][...]] [France [Paris][...]]  [...]]
		\end{forest}}
		\caption{Qtree for the HDs (\ref{ex:hd-sw}-\ref{ex:hd-ws}), derived from \ref{tree:noto-2-tiered}$\vee$\ref{tree:italy-wh}}
		\label{tree:noto-or-italy}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [{Italy}[\fbox{Noto}][Rome][...]] [\fbox{France} [Paris][...]]  [\fbox{...}]]
		\end{forest}}
		\caption{Qtree for (\ref{ex:noto-or-not-italy}).}
		\label{tree:noto-or-not-italy}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [{Italy}[\fbox{Noto}][Rome][...]] [\fbox{France} [Paris][...]]  [{...}]]
		\end{forest}}
		\caption{Qtree for (\ref{ex:noto-or-france}).}
		\label{tree:noto-or-france}
	\end{subfigure}
	\caption{Qtrees for disjunctive sentences featuring disjuncts with different granularities.}
\end{figure}

Why predict that Qtrees for odd HDs like (\ref{ex:hd-sw}-\ref{ex:hd-ws}) should be derivable in the first place? This turns out useful to derive Qtrees for closely related yet felicitous sentences such as (\ref{ex:noto-or-not-italy}-\ref{ex:noto-or-france}), which feature \textit{incompatible} disjuncts with different granularities. Qtrees for (\ref{ex:noto-or-not-italy}-\ref{ex:noto-or-france}) are given in Figures \ref{tree:noto-or-not-italy} and \ref{tree:noto-or-france}.

\begin{exe}
	\ex 
	\begin{xlist}
		\ex {SuB29 will take place in Noto or will not take place in Italy.}\label{ex:noto-or-not-italy}
		\ex {SuB29 will take place in Noto or in France.}\label{ex:noto-or-france}
	\end{xlist}
\end{exe}
These two examples and their Qtrees also suggest what the issue might be with the infelicitous HDs (\ref{ex:hd-sw}-\ref{ex:hd-ws}) and their Qtree in Figure \ref{tree:noto-or-italy}: the path connecting the root to the verifying node \textit{Noto}, properly contains the path connecting the root to the verifying node \textit{Italy}. Entertaining these two paths--or strategies of inquiry--appears suboptimal: why inquire about a country like \textit{Italy}, if one already inquires about a city like \textit{Noto}? The Qtrees in Figure \ref{tree:noto-or-not-italy} and \ref{tree:noto-or-france} do not exhibit similar contained paths. We now restate this observation in the form of a \textsc{Redundancy} constraint targeting LF-Qtree pairs.

\subsection{Defining Redundancy on LF-Qtree pairs}
As briefly discussed in section \ref{sec:prev-approaches}, \textsc{Redundancy}-based approaches to oddness (\citenp{Meyer2013}; \citenp{Katzir2014}; \citenp{Mayr2016} i.a.) build on the general idea that a felicitous sentence should not have the same contribution to a conversation as one of its formal simplifications. The major issue with most previous \textsc{Redundancy}-based approaches (the notable exception being \citet{Kalomoiros2024}) is that they predict isomorphic sentences (as defined in (\ref{ex:iso})) to exhibit the same degree of deviance. So contrasts between HDs and HCs, and within HCs, could not be easily captured. Under our QuD-informed view however, disjunctions and implications do have different pragmatic contributions. Making \textsc{Redundancy} sensitive to these differences, allows to derive the desired contrasts.

(\ref{ex:q-redundancy}) restates \textsc{Redundancy} as a constraint on LF-Qtree pairs: a Qtree evoked by a sentence is \textsc{Q-Redundant} if it is equivalent to a Qtree evoked by one the sentence's formal simplifications. Equivalence between Qtrees is defined in terms of both tree structure and optimal strategies of inquiry, i.e. minimal sets of paths from the root to each existing verifying node. Two Qtrees are equivalent, if their structure and optimal strategies of inquiry are the same. Considering optimal strategies of inquiry cashes out the intuition that inquiring about $p^+$ settles $p$ ``for free'', in the sense that any path to $p^+$ in a given Qtree, contains a path to $p$.

\begin{exe}
	\ex 
	\begin{xlist}
		\ex {\textit{\textsc{Q-Redundancy}}. Let $X$ be a LF and let $Qtrees(X)$ be the set of the Qtrees compatible with $X$. For any $T \in Qtrees(X)$, $T$ is deemed \textsc{Q-Redundant} with respect to $X$ iff there exists a formal simplification of $X$, $X'$, and $T' \in Qtrees(X')$, such that $\mathcal{R}(T)\equiv\mathcal{R}(T')$.}\label{ex:q-redundancy}
		\ex {\textit{Formal simplification}. $X$ is a formal simplification of $X$ if $X'$ can be derived from $X$ \textit{via} a series of constituent-to-subconstituent substitutions (à la \citet{Katzir2007}).}\label{ex:formal-simplification}
		\ex {Qtree equivalence relation $\equiv$. $T \equiv T'$ iff $T$ and $T'$ have same structure and same set of minimal verifying paths.}\label{ex:q-equivalence}
		\ex {\textit{Qtree reduction function $\mathcal{R}$}. $\mathcal{R}(T)$ is the tree obtained from $T$ by removing all empty nodes and recursively replacing only children by their mother, percolating the ``verifying'' property as needed.\footnote{This means that, if the only child deletion operation targets a mother node $M$ and its only child node $N$, the output is $M$ and is verifying iff $M$ \textit{or} $N$ is verifying.}}\label{ex:q-reduction}
		\ex {\textit{Set of verifying paths $\mathbb{P}(T)$ of a Qtree $T$}. Set of paths starting from the root of $T$, and such that each path finishes in each $N \in \mathbb{N}^+(T)$.}\label{ex:verifying-paths}
		\ex {\textit{Path containment. } Two paths $p_1$ and $p_2$ (seen as strings of nodes) are in a containment relation ($p_1 \subseteq_{\mathbb{P}} p_2$) if $p_1$ is a prefix of $p_2$.}\label{ex:path-containment}
		\ex {\textit{Set of \textit{minimal} verifying paths $\mathbb{P}^*(T)$ of a Qtree $T$}. Set of minimal elements of $\mathbb{P}(T)$ w.r.t. the path containment relation.}\label{ex:min-verifying-paths}
	\end{xlist}
\end{exe}

We now see how this applies to (\ref{ex:hd}) and (\ref{ex:hc}). First, (\ref{ex:q-redundancy}) does not interfere with the result established for HCs in Section \ref{sec:hcs}.\footnote{None of the Qtrees in Figures \ref{trees:if-not-noto-italy} and \ref{trees:if-italy-not-noto} violate (\ref{ex:q-redundancy}). To see this, we review the Qtrees associated to the simplifications of (\ref{ex:hc-sw}) and (\ref{ex:hc-ws}). First, Qtrees for the simplifications \textit{Sub29 will take place in Noto/Italy}, and \textit{Sub29 will not take place in Noto}, shown in Figures \ref{trees:noto}, \ref{trees:italy} and \ref{trees:not-noto}, either have a different structure, or different minimal verifying paths from the Qtrees in Figures \ref{trees:if-not-noto-italy} and \ref{trees:if-italy-not-noto}, so (\ref{ex:q-redundancy}) is not triggered. Regarding the simplification of (\ref{ex:hc-sw}) \textit{If SuB29 will take place in Noto, it will take place in Italy}, it is predicted, as per property (\ref{ex:granularity-vacuous}), to give rise to the same Qtrees as \textit{Sub29 will take place in Noto}, which, as said above, do not trigger (\ref{ex:q-redundancy}). Lastly, the simplification of (\ref{ex:hc-ws}) \textit{If SuB29 will take place in Italy, it will take place in Noto}, evokes Qtrees structurally similar to those in Figure \ref{trees:if-italy-not-noto}, but whose verifying nodes support \textit{Noto} (instead of \textit{not Noto}), and as such cannot trigger (\ref{ex:q-redundancy}).} Moreover, \textsc{Q-Redundancy} explains why the only Qtree compatible with the HDs (\ref{ex:hd-sw}-\ref{ex:hd-ws}), repeated in Figure \ref{tree:noto-or-italy-redundant}, is redundant: it is equivalent (in terms of structure and minimal verifying paths) to a Qtree evoked by $X^+$=\textit{SuB29 will take place in Noto}, repeated in Figure \ref{tree:noto-2-tiered-repeated}. The equality between the sets of minimal verifying paths for those two trees is justified in (\ref{ex:minimal-path-equality-hd}).

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Italy}[\fbox{Noto}][Rome][...]] [France [Paris][...]] [...]]
				\draw[color=orange, thick] (-.5, .2) -- (-2.3, -.4);
				\draw[->, color=orange, thick] (-2.3, -.4) -- (-2.9, -1.6);
				\draw[->, color=blue, thick] (-.5, -.05) -- (-1.95, -.53);
				%\draw[->] (-.5, 0) [out=west, in=north] to (-2.1, -.6);
				%\draw[->] (-.5, .3) [out=west, in=north west] to (-2.9, -1.8);
		\end{forest}}
		\caption{Qtree for the HDs (\ref{ex:hd-sw}-\ref{ex:hd-ws}).}
		\label{tree:noto-or-italy-redundant}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [Italy[\fbox{Noto}] [Rome][...]] [France[Paris][...]] [...]]
				\draw[color=orange, thick] (-.5, 0) -- (-2.1, -.4);
				\draw[->, color=orange,thick] (-2.1, -.4) -- (-2.9, -1.5);
		\end{forest}}
		\caption{Possible Qtree for \textit{Sub29 will take place in Noto} (=Figure \ref{tree:noto-2-tiered}).}\label{tree:noto-2-tiered-repeated}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.32\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Italy}[\fbox{Noto}][Rome][...]] [France [\fbox{Paris}][...]]  [...]]
		\end{forest}}
		\caption{Qtree for the LDHDs (\ref{ex:ldhd-ws}) and (\ref{ex:ldhd-sw}).}
		\label{tree:noto-or-paris-or-italy-redundant}
	\end{subfigure}
	\caption{Showing that the HDs (\ref{ex:hd-sw}-\ref{ex:hd-ws}) are \textsc{Q-Redundant}}
\end{figure} 
\begin{exe}
	\ex {$\mathbb{P}(\text{\ref{tree:noto-or-italy-redundant}}) = \lbrace \textcolor{orange}{[ CS, \ Italy, \ Noto ]}, \ \textcolor{blue}{[ CS, \ Italy ]} \rbrace$\\
		$\mathbb{P}^*(\text{\ref{tree:noto-or-italy-redundant}}) = \lbrace \textcolor{orange}{[ CS, \ Italy, \ Noto ]}\rbrace$, because $\textcolor{blue}{[ CS, \ Italy ]} \subseteq_{\mathbb{P}} \textcolor{orange}{[ CS, \ Italy, \ Noto ]}$\\
		$\mathbb{P}(\text{\ref{tree:noto-2-tiered-repeated}}) = \lbrace \textcolor{orange}{[ CS, \ Italy, \ Noto ]} \rbrace = \mathbb{P}^*(\text{\ref{tree:noto-2-tiered-repeated}})=\mathbb{P}^*(\text{\ref{tree:noto-or-italy-redundant}})$}\label{ex:minimal-path-equality-hd}
\end{exe}


Before moving on, let us note a few things about \textsc{Q-Redundancy}. First, while previous \textsc{Redundancy}-based accounts (e.g. \citenp{Katzir2014}) deemed HDs redundant because they were contextually equivalent to their \textit{weaker} disjunct, \textsc{Q-Redundancy} does the opposite: an LF-Qtree pair is typically \textsc{Q-Redundant} because the Qtree turns out to be equivalent to that of a logically \textit{stronger} competitor. For instance, the only Qtree compatible with (\ref{ex:hd-sw}-\ref{ex:hd-ws}) is equivalent to a Qtree evoked by the simplification \textit{SuB29 will take place in Noto}, which corresponds to (\ref{ex:hd-sw}-\ref{ex:hd-ws})'s \textit{stronger} disjunct. This is in line with a concept of ``inquisitive''  (as opposed to ``logical'') redundancy: once we inquire about a \textit{stronger} eventuality (e.g., \textit{Noto}), inquiring about a \textit{weaker} alternative to this eventuality (e.g., \textit{Italy}), becomes useless. Additionally, \textsc{Q-Redundancy} is relatively easy to violate: for a Qtree to be redundant given an LF evoking it, it is enough to find \textit{one} equivalent Qtree generated by \textit{one} simplification of the LF. Moreover, a sentence can be odd if \textit{some} of its evoked Qtrees trigger \textsc{Q-Redundancy}, and the remaining ones violate \textsc{Q-Relevance}. These observations are further discussed in \citeauthor{HenotMortier2024b} (to appear). Lastly, \textsc{Q-Redundancy} is in effect close to \citet{Ippolito2019}'s \textsc{Specificity Constraint}. The main conceptual difference is that \citeauthor{Ippolito2019}'s constraint does not involve competition with simpler LFs, and instead defines ill-formed configurations of nodes \textit{in} a fixed tree.\footnote{\citeauthor{Ippolito2019}'s constraint also bans disjunctions with incompatible, different-granularity alternatives, like (\ref{ex:noto-or-not-italy}-\ref{ex:noto-or-france}).} We now briefly show how our model also captures two kinds of ``non-entailing'' HDs: Long-Distance HDs (henceforth \textbf{LDHD}, \citenp{Marty2022}), which are derived from HDs by further disjoining the stronger disjunct with a proposition incompatible with the weaker disjunct, and disjunctions featuring merely compatible disjuncts \citep{Singh2008a}.

\subsection{Extension to varieties of non-entailing HDs}
LDHDs (cf. (\ref{ex:ldhd})), are infelicitous, despite the fact that none of their disjuncts are in an entailment relation--thus falling outside \citeauthor{Hurford1974}'s original constraint. LDHDs evoke Qtrees like the one in Figure \ref{tree:noto-or-paris-or-italy-redundant}. This Qtree is deviant because it is equivalent to the Qtree evoked by the simplification of (\ref{ex:ldhd-ws}-\ref{ex:ldhd-sw}) in (\ref{ex:ldhd-simpl}).

\begin{exe}
	\ex \label{ex:ldhd}
	\begin{xlist}
		\ex[\#] {Either SuB29 will take place in Italy, or it will take place in Noto or Paris.}\label{ex:ldhd-ws}
		\ex[\#] {Either SuB29 will take place in Noto or Paris, or it will take place in Italy.}\label{ex:ldhd-sw}
	\end{xlist}
	\ex[] {SuB29 will take place in Noto or Paris.}\label{ex:ldhd-simpl}
\end{exe}

Our model also extends to disjunctions like (\ref{ex:hd-compatible}), featuring merely compatible disjuncts \citep{Singh2008a}. 
In (\ref{ex:hd-compatible}), the first disjunct suggests a by-region partition, while the second disjunct suggests a by-country partition. The relevant Qtrees are built in Figure \ref{trees:compat}. It turns out that the Qtrees in Figure \ref{trees:basque} cannot be properly disjoined with any of those in Figure \ref{trees:france}, because they introduce different, parallel partitionings.\footnote{The only remaining way to create a well-formed Qtree for (\ref{ex:hd-compatible}), would be to attempt to create a tiered Qtree for \textit{SuB29 will take place in the Basque country}, involving a country-layer (\textit{via} principle (\ref{ex:qtree-simplex-def}\ref{pt:simplex-qtree-tiered})). But this turns out impossible, because \textit{p}=\textit{SuB29 will take place in the Basque country} does not entail that SuB29 will place in any single specific country, so no $p$-chain can contain a country-level alternative to $p$, and consequently, no country-layer can be generated in $p$'s tiered Qtree.} So (\ref{ex:hd-compatible}) is odd simply because it features disjuncts with incomparable degrees of granularity, which cannot lead to any well-formed disjunctive Qtree. There is in fact no need to appeal to \textsc{Q-Redundancy}.\footnote{Granted a reasonable model of conjunction, this kind of prediction could extend to ``conjunctive'' HDs (\citenp{Zhang2022}; \citeauthor{Zhang2024}, to appear), like \textit{\#Jo is in Paris or in France and married}.}

\begin{exe}
	\ex[\#] {SuB29 will take place in the Basque country or France.}\label{ex:hd-compatible}
\end{exe} 


\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.55\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Basque}] [$\neg${Basque}]]
		\end{forest}}
		\hfill
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Basque country}] [Navarre] [Midi] [...]]
		\end{forest}}
		\caption{For \textit{SuB29 will take place in the Basque country}}\label{trees:basque}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.4\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{France}] [$\neg$France]]
		\end{forest}}\hfill
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{France}] [Spain] [...]]
		\end{forest}}
		\caption{For \textit{SuB29 will take place in France}}\label{trees:france}
	\end{subfigure}\hfill
	\caption{Possible Qtrees for the disjuncts of (\ref{ex:hd-compatible})}\label{trees:compat}
\end{figure}
\vspace{-3mm}


\section{Conclusion}\label{sec:ccl}
We developed an account of Hurford Sentences based on implicit QuDs and constraints on their derivation. This framework captures the challenging contrast between HDs, which are infelicitous in both orders, and HCs, whose felicity profile seems sensitive to granularity considerations. We also sketched how this model could capture ``non-entailing'' HDs. An issue remains with ``conditional'' counterparts of (\ref{ex:hd-compatible}), shown in (\ref{ex:hc-compatible}). (\ref{ex:hc-compatible-ws}-\ref{ex:hc-compatible-sw}) are \textit{both} predicted to be odd, roughly because Qtrees evoked by \textit{France} and Qtrees evoked by \textit{the Basque country} convey incomparable degrees of granularity, and thus are not in any kind of refinement relation.

\begin{exe}
	\ex \label{ex:hc-compatible}
	\begin{xlist}
		\ex[?] {If SuB29 will take place in France, it will take place in the Basque country.}\label{ex:hc-compatible-ws}
		\ex[\#] {If SuB29 will take place in the Basque country, it will take place in France.}\label{ex:hc-compatible-sw}
	\end{xlist}
\end{exe}

In our framework, the contrast in (\ref{ex:hc-compatible}) suggests that it is somehow easier to ``split'' \textit{Basque country} nodes into French and Spanish subsets (to satisfy \textsc{Q-Relevance} in \ref{ex:hc-compatible-ws}), than to ``split'' \textit{France} nodes into Basque and non-Basque subsets (to satisfy \textsc{Q-Relevance} in \ref{ex:hc-compatible-sw}). Future work will determine when and how such coercion operations on Qtrees can take place.

Beyond Hurford Phenomena, our model of implicit QuDs raises a range of questions: why are the ``inquisitive'' contributions of $\neg$, $\rightarrow$, and $\vee$ defined the way they are? What distinguishes non-scalar from scalar alternatives when it comes to Qtree computation? How do Qtrees interact with presuppositions (e.g. in Partee's \textit{bathroom sentences}; \citenp{Roberts1989}), and focus-sensitive operators (e.g. in HDs with \textit{only}; \citenp{Singh2008a}). What about conjunctions?\footnote{\citet{Enguehard2021} in fact proposes an account of conjunctions of questions, and their interaction with presupposition projection, by introducing an asymmetry in the global partition (derived after conjoining questions) that is somewhat similar to the one our conditional Qtrees are taken to exhibit.}

\section{Extension to more elaborate Hurford Disjunctions}

john is in frnace or in paris or married (zhang's/amir 's datapoints)


We developed an account of Hurford Sentences based on implicit QuDs and constraints on their derivation. This framework captured the challenging contrast between HDs, which are infelicitous regardless of the order of the disjuncts, and HCs, whose felicity profile seems sensitive to granularity considerations. We also sketched how this model could capture Long-Distance HDs.
\subsection{Compatible, non-entailing disjuncts}


Interestingly, the model extends its scope to HDs with merely compatible disjuncts \citep{Singh2008b}, exemplified in (\ref{ex5:hd-compatible}).



In (\ref{ex5:hd-compatible}) the first disjunct suggests a by-region partition, such that the Basque country represents a (verifying) leaf; while the second disjunct suggests a by-country partition, such that France represents a (verifying) leaf. The relevant Qtrees are built in Figure \ref{fig5:qtrees-compat}.

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.55\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Basque}] [$\neg${Basque}]]
		\end{forest}}
		\hfill
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{Basque country}] [Navarre] [Midi] [...]]
		\end{forest}}
		\caption{Qtrees for \textit{SuB29 will take place in the Basque country}, given principles (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-polar}) (left tree) or (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-wh}) (right tree).}\label{fig5:qtrees-basque}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.4\linewidth}
		\centering
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{France}] [$\neg$France]]
		\end{forest}}\hfill
		\scalebox{.8}{
			\begin{forest}for tree={s sep=2mm, inner sep=0, l=0}
				[CS [\fbox{France}] [Spain] [...]]
		\end{forest}}
		\caption{Qtrees for \textit{SuB29 will take place in France}, given principles (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-polar}) (left tree) or (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-wh}) (right tree).}\label{fig5:qtrees-france}
	\end{subfigure}\hfill
	\caption{Possible Qtrees for the disjuncts of (\ref{ex5:hd-compatible}).}\label{fig5:qtrees-compat}
\end{figure}


Can  a disjunctive Qtree be built for (\ref{ex5:hd-compatible})? It turns out that the trees in Figure \ref{fig5:qtrees-basque} cannot be properly disjoined with any of those in Figure \ref{fig5:qtrees-france}, due to the fact that they introduce different, parallel partitionings. The only remaining way to disjoin Qtrees associated with each disjunct of (\ref{ex5:hd-compatible}), would be to create a tiered Qtree for \textit{SuB29 will take place in the Basque country}, involving a by-country layer (\textit{via} principle (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-tiered})). But a problem arises in the formation of such a Qtree. Given that \textit{p}=\textit{SuB29 will take place in the Basque country} does not entail that SuB29 will place in any single specific country, it is impossible to create a $p$-chain containing a country-level alternative to $p$. Consequently, no Qtree generated from \textit{SuB29 will take place in the Basque country} using principle (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-tiered}) will contain a by-country layer. To summarize, we predict a sentence like (\ref{ex5:hd-compatible}) to be odd because it features compatible disjuncts with incomparable degrees of granularity, which cannot lead to any well-formed disjunctive Qtree.

However, HC-variants of (\ref{ex5:hd-compatible}) are predicted by our model to be odd regardless of the ordering of the antecedent and consequent, because Qtrees evoked by \textit{France} and Qtrees evoked by \textit{the Basque country} are not in any kind of refinement relation. This prediction is not empirically borne out, as shown in (\ref{ex5:hc-compatible}).

\begin{exe}
	\ex \label{ex5:hc-compatible}
	\begin{xlist}
		\ex[?] {If SuB29 will take place in France, it will take place in the Basque country.}\label{ex5:hc-compatible-ws}
		\ex[\#] {If SuB29 will take place in the Basque country, it will take place in France.}\label{ex5:hc-compatible-sw}
	\end{xlist}
\end{exe}

Within our framework, the contrast in (\ref{ex5:hc-compatible}) suggests that it is somehow easier to split the set of \textit{Basque country} worlds into French and Spanish subsets (in order to satisfy \textsc{Q-Relevance} in \ref{ex5:hc-compatible-ws}), than to split the set of \textit{France} worlds into Basque and non-Basque subsets (in order to satisfy \textsc{Q-Relevance} in \ref{ex5:hc-compatible-sw}). Future work should investigate when, and how such coercion operations on Qtrees can take place.\\





\iffalse
\begin{subfigure}[b]{.33\linewidth}
	\centering
	\scalebox{.8}{
		\begin{forest}for tree={s sep=7mm, inner sep=0, l=0}
			[CS [{France} [Midi] [~]] [Spain [~] [Navarre]] [...]]
			\node[draw,align=center] at (-.75,-2.3) {Basque\\country};
	\end{forest}}
	\caption{A tentative Qtree for \textit{Sub will take place in the Basque country}, given principle (\ref{ex5:qtree-simplex-def}\ref{pt:simplex-qtree-tiered})}\label{fig5:qtree-basque-tiered}
\end{subfigure}
\fi


\subsection{``Long-Distance'' HCs}
In this section, we explore how our QuD-informed view of redundancy captures two kinds of ``Long-Distance'' variants of HCs: those derived from LDHDs \textit{via} the \textit{or-to-if} tautology; and those derived by applying the ``Long Distance'' recipe directly to HCs. 


\subsubsection{LDHCs derived from LDHDs}

Recall that ``Long Distance'' HDs (\textbf{LDHDs}, \citenp{Marty2022}) are obtained from standard HDs of the form \p{} $\vee$ \pplus{} by further disjoining \pplus{} with a proposition \r{}, s.t. \pplus{} $\vee$ \r{} is not redundant, and no longer entails \p. This can be done by choosing \r{} to contradict \pplus{} and \p{}. Such constructions have been argued to be deviant, despite the fact that none of their disjuncts are in an entailment relation (and thus satisfy the traditional, non-explanatory version of Hurford's Constraint). (\ref{ex5:ldhd-pos}) illustrates a classic LDHD: \textit{Europe} entails \textit{France}, and \textit{France} is further disjoined with \textit{New York}, that is incompatible with \textit{Europe} -- making the two main disjuncts compatible, but non-entailing.  (\ref{ex5:ldhd-neg}) illustrates a perhaps more degenerate case of LDHD: the weak disjunct, \textit{not France}, takes the form of the negation of the stronger disjunct of (\ref{ex5:ldhd-pos}); the stronger disjunct, \textit{not Europe}, takes the form of the negation of the weak disjunct of (\ref{ex5:ldhd-pos}); and the extra proposition disjoined with it (\textit{Paris}), is chosen to be incompatible with \textit{not France} and \textit{not Europe}. Note that the kind of variable change we described here, was already used to construct simple infelicitous HCs like (\ref{ex5:hc-ns-w}).

\begin{exe}
	\exr{ex5:ldhd}
	\begin{xlist}
		\ex[\#] {Jo either studied in \textcolor{blue}{Europe}, or in \textcolor{orange}{France} or in \textcolor{green}{New York}.
			\hfill \p{} $\vee$ (\pplus{} $\vee$ \r)}\label{ex5:ldhd-pos}
		\ex[\#] {Jo either does\textcolor{blue}{n't study in France}, or \textcolor{orange}{not in Europe} or in \textcolor{green}{Paris}.	\hfill \textbf{\textcolor{blue}{q}} $\vee$ (\textcolor{orange}{\textbf{q}$^+$} $\vee$ \r)\\
			with: \textbf{\textcolor{blue}{q}} := $\neg$\pplus; \textcolor{orange}{\textbf{q}$^+$} := $\neg$\p }\label{ex5:ldhd-neg}
	\end{xlist}
\end{exe}

We think that both (\ref{ex5:ldhd-pos}) and (\ref{ex5:ldhd-neg}) are degraded -- which is in itself interesting because SR predicts (\ref{ex5:ldhd-neg}) to be fine.

\begin{exe}
	\ex 
	\begin{xlist}
		\ex {(\ref{ex5:ldhd-pos})=\p{} $\vee$ (\pplus{} $\vee$ \r) is SR.\\
			C = \pplus. $\forall D. $ \p{} $\vee$ ((\pplus{}$\wedge$ $D$) $\vee$ \r) $\equiv$ \p{} $\vee$ ((\pplus{}$\vee$ \r) $\wedge$ ($D$ $\vee$ \r)) $\equiv$ (\p{} $\vee$ \r) $\wedge$ (\p{} $\vee$ $D$ $\vee$ \r) $\equiv$ \p{} $\vee$ \r}
		\ex {(\ref{ex5:ldhd-neg}) = $\neg$\pplus{} $\vee$ ($\neg$\p{} $\vee$ \r) is not SR.\\
			C = $\neg$\pplus. Take $D = \top$.\\
			$\neg$(\pplus{} $\wedge$ $D$) $\vee$ ($\neg$\p{} $\vee$ \r) $\equiv$ $\neg$\pplus{} $\vee$ ($\neg$\p{} $\vee$ \r) $\equiv$ $\neg$\pplus{} $\vee$ \r{} $\not\equiv$ $\neg$\p{} $\vee$ \r\\
			C = $\neg$\p. Take $D = \bot$.\\
			$\neg$\pplus{} $\vee$ ($\neg$(\p{} $\wedge$ $D$) $\vee$ \r) $\equiv$ $\neg$\pplus{} $\vee$ ($\top$ $\vee$ \r) $\equiv$ $\top$ $\not\equiv$ $\neg$\pplus{} $\vee$ \r\\
			C = \r. Take $D = \top$.\\
			$\neg$\pplus{} $\vee$ ($\neg$\p{} $\vee$ (\r{} $\wedge$ $D$)) $\equiv$ $\neg$\pplus{} $\vee$ \r{} $\not\equiv$ $\neg$\pplus $\equiv$ $\neg$\pplus{} $\vee$ $\neg$\p{}\\
			C = ($\neg$\p{} $\vee$ \r). Take $D = \top$.\\
			$\neg$\pplus{} $\vee$ (($\neg$\p{} $\wedge$ $D$) $\vee$ (\r{} $\wedge$ $D$)) $\equiv$ $\neg$\pplus{} $\vee$ ($\neg$\p{} $\vee$ \r) $\equiv$ $\neg$\pplus{} $\vee$ \r{} $\not\equiv$ $\neg$\pplus
			
		}
	\end{xlist}
	
\end{exe}

Interestingly, turning the LDHDs in (\ref{ex5:ldhd}) into conditionals maintains infelicity, as shown in (\ref{ex5:ldhc}).

\begin{exe}
	\exr{ex5:ldhc}
	\begin{xlist}
		\ex[\#] {If Jo did not study in \textcolor{blue}{Europe}, she studied in \textcolor{orange}{France} or in \textcolor{green}{New York}.}
		\ex[\#] {If Jo studied in \textcolor{blue}{France}, she did not study \textcolor{orange}{in Europe} or she studied in \textcolor{green}{Paris}.}
	\end{xlist}
\end{exe}

We proceed to show that both (\ref{ex5:ldhc-pos}) and (\ref{ex5:ldhc-neg}) are \textsc{Q-Redundant}. \textsc{Q-Redundancy}, as defined in Chapter \ref{chap:hurford-sentences}, states that a Qtree $T$ paired with a specific LF $X$ is deviant iff the $T$ is equivalent to a tree $T'$ compatible with a simplification of $X$. (\ref{ex5:ldhc-pos}) is then \textsc{Q-Redundant} because any Qtree it evokes is also evoked by (\ref{ex5:ldhc-pos-simplification}); and (\ref{ex5:ldhc-neg}) is \textsc{Q-Redundant} as well, because any Qtree it evokes is also evoked by (\ref{ex5:ldhc-neg-simplification}).

\begin{exe}
	\ex\label{ex5:ldhc-simplifications}
	\begin{xlist}
		\ex[] {If Jo did not study in \textcolor{blue}{Europe}, she studied in \textcolor{green}{New York}.}\label{ex5:ldhc-pos-simplification}
		\ex[] {If Jo studied in \textcolor{blue}{France}, she studied in \textcolor{green}{Paris}.}\label{ex5:ldhc-neg-simplification}
	\end{xlist}
\end{exe}

We start with (\ref{ex5:ldhc-pos}). The possible Qtrees evoked by its antecedent ($\neg$\textit{Europe}) are depth-1 Qtrees whose leaves are $\lbrace$\textit{Europe}, $\neg$\textit{Europe}$\rbrace$, or continent-level alternatives $\lbrace$\textit{Europe}, \textit{Africa}, \textit{Asia}, ...$\rbrace$. ``Tiered'' Qtrees are unlikely, since coarser-grained alternatives to continent-level locations are themselves unlikely to be salient. In each possible Qtree, the leaves incompatible with \textit{Europe} are flagged as verifying (effect of negation). This is summarized in Figure \ref{trees:not-Europe}.

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				[CS[Europe][\fbox{$\neg$Europe}]]
			\end{forest}
		}
		\caption{}\label{tree:not-europe-polar}
	\end{subfigure}
	\qquad
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				[CS[Europe][\fbox{America}][\fbox{Africa}][\fbox{...}]]
			\end{forest}
		}
		\caption{}\label{tree:not-europe-wh}
	\end{subfigure}
	\caption{Qtrees for \textit{Jo did not study in \textcolor{blue}{\textbf{Europe}}.}}\label{trees:not-Europe}
\end{figure}

The consequent of (\ref{ex5:ldhc-pos}) is disjunctive, and therefore results from the well-formed union of Qtrees evoked by its two disjuncts (\textit{France} and \textit{New York}). Possible Qtrees for \textit{France} (already computed in section \ref{sec:qtrees-scalemates-non-scalemates}), are repeated in Figure \ref{trees:france-2}; possible Qtrees for \textit{New York} can be computed in a way that is strictly analogous to Qtrees for \textit{Paris} (as done in section \ref{sec:qtrees-scalemates-non-scalemates}), and are thus given in Figure \ref{trees:new-york}.
\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\begin{forest}
			[CS[\bfbox{France}][$\neg$France]]
		\end{forest}
		\caption{}\label{tree:france-polar-2}
	\end{subfigure}
	\qquad
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\begin{forest}
			[CS[\bfbox{France}][US][...]]
		\end{forest}
		\caption{}\label{tree:france-wh-2}
	\end{subfigure}
	\caption{Qtrees for \textit{Jo studied in \textbf{\textcolor{blue}{France}}}.} \label{trees:france-2}
\end{figure}

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[\gfbox{New York}][$\neg$New York]]
		\end{forest}}
		\caption{}\label{tree:new-york-polar}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[\gfbox{New York}][Boston][Paris][...]]
		\end{forest}}
		\caption{}\label{tree:new-york-wh}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[France[{Paris}][...]][US[\gfbox{New York}][Boston]][...]]
		\end{forest}}
		\caption{}\label{tree:new-york-tiered}
	\end{subfigure}
	
	
	\caption{Qtrees for \textit{Jo studied in \textbf{\textcolor{green}{New York}}.}}\label{trees:new-york}
\end{figure}

Unioning Qtrees from Figures \ref{trees:france-2} and \ref{trees:new-york} can be done in only one way: using Tree \ref{tree:france-wh-2} for \textit{France}, and Tree \ref{tree:new-york-tiered}, for \textit{New York}. This yields the Qtree in Figure \ref{tree:france-or-new-york}.

\begin{figure}[H]
	\centering
	\scalebox{1}{
		\begin{forest}
			for tree={s sep=2mm, inner sep=0, l=0}
			[CS[\fbox{France}[{Paris}][...]][US[\fbox{New York}][Boston][...]][...]]
	\end{forest}}
	\caption{Qtree for \textit{Jo studied in \textcolor{orange}{\textbf{France}} or in \textcolor{green}{\textbf{New York}}}.}\label{tree:france-or-new-york}
\end{figure}

Now that Qtrees for the antecedent and the consequent of (\ref{ex5:ldhc-pos}) are derived, we can combine them to form a Qtree for the whole conditional, by taking the antecedent Qtrees from Figure \ref{trees:not-Europe} and replacing their verifying nodes (anything non Europe) by their intersection with the consequent Qtree from Figure \ref{tree:france-or-new-york}. This yields the Qtrees in Figure \ref{trees:if-not-Europe-then-france-or-new-york}. 

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.45\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[Europe][{$\neg$Europe} [US[\fbox{New York}][Boston][...]][Japan[...]][...]]]
			\end{forest}
		}
		\caption{}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.45\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[Europe][{America}[US[\fbox{New York}][Boston][...]][...]][{Africa}[...]][{...}]]
			\end{forest}
		}
		\caption{}
	\end{subfigure}
	\caption{Qtrees for (\ref{ex5:ldhc-pos}) = \textit{If Jo did not study in \textcolor{blue}{\textbf{Europe}}, she studied in \textcolor{orange}{\textbf{France}} or in \textcolor{green}{\textbf{New York}}.}}\label{trees:if-not-Europe-then-france-or-new-york}
\end{figure}

Crucially, the intersection operation between the consequent Qtree in Figure \ref{tree:france-or-new-york}, and the non-Europe nodes in the Qtrees from Figure \ref{trees:not-Europe}, discarded the sections of the consequent Qtree that had to do with \textit{France}. This does not violate \textsc{Q-Relevance}, but instead, causes the output Qtrees to be identical (and hence, equivalent) to Qtrees evoked by a formal simplification of (\ref{ex5:ldhc-pos}) that does not feature \textit{France} as a disjunct in its consequent -- namely, (\ref{ex5:ldhc-pos-simplification}). Any Qtree derived from (\ref{ex5:ldhc-pos}) is thus \textsc{Q-Redundant}, and as a result, we correctly predict (\ref{ex5:ldhc-pos}) to be infelicitous.\\

We can now move on to the case of (\ref{ex5:ldhc-neg}). The possible Qtrees evoked by its antecedent (France), are already given in Figure \ref{trees:france-2}.


The consequent of (\ref{ex5:ldhc-neg}) is disjunctive, and therefore results from the well-formed union of Qtrees evoked by its two disjuncts ($\neg$\textit{Europe} and \textit{Paris}). Possible Qtrees for $\neg$\textit{Europe} are already given in Figure \ref{trees:not-Europe}. Possible Qtrees for \textit{Paris} are given in Figure \ref{trees:paris}.

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[\ofbox{Paris}][$\neg$Paris]]
		\end{forest}}
		\caption{}\label{tree:paris-polar}
	\end{subfigure}
	\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[\ofbox{Paris}][Nice][London][...]]
		\end{forest}}
		\caption{}\label{tree:paris-wh}
	\end{subfigure}\hfill
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[France[\ofbox{Paris}][Nice][...]][UK[London][...]][...]]
		\end{forest}}
		\caption{}\label{tree:paris-tiered}
	\end{subfigure}
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\scalebox{1}{
			\begin{forest}
				for tree={s sep=2mm, inner sep=0, l=0}
				[CS[Europe[France[\fbox{Paris}][Nice][...]][UK[London][...]]][America[...]][...]]
		\end{forest}}
		\caption{}\label{tree:paris-tiered-tiered}
	\end{subfigure}
	
	
	\caption{Qtrees for \textit{Jo studied in \textbf{\textcolor{orange}{Paris}}.}}\label{trees:paris}
\end{figure}

Unioning Qtrees from Figures \ref{trees:not-Europe} and \ref{trees:paris} can be done in only one way: using Tree \ref{tree:not-europe-wh} for $\neg$\textit{Europe}, and Tree \ref{tree:paris-tiered-tiered}, for \textit{Paris}. This yields the Qtree in Figure \ref{tree:not-europe-or-paris}.

\begin{figure}[H]
	\centering
	\scalebox{1}{
		\begin{forest}
			for tree={s sep=2mm, inner sep=0, l=0}
			[CS[Europe[France[\fbox{Paris}][Nice][...]][UK[London][...]]][\fbox{America}[{...}]][\fbox{...}]]
	\end{forest}}
	\caption{Qtrees for \textit{Jo did not study in \textbf{\textcolor{blue}{Europe}} or studied in \textbf{\textcolor{orange}{Paris}}.}}\label{tree:not-europe-or-paris}
\end{figure}

Now that Qtrees for the antecedent and the consequent of (\ref{ex5:ldhc-neg}) are derived, we can combine them to form a Qtree for the whole conditional, by taking the antecedent Qtrees from Figure \ref{trees:france-2} and replacing their verifying nodes (\textit{France} nodes) by their intersection with the consequent Qtree from Figure \ref{tree:not-europe-or-paris}. This yields the Qtrees in Figure \ref{trees:if-france-then-not-europe-or-paris}. 

\begin{figure}[H]
	\centering
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\begin{forest}
			[CS[{France}[\fbox{Paris}][Nice][...]][$\neg$France]]
		\end{forest}
		\caption{}
	\end{subfigure}
	\qquad
	\begin{subfigure}[b]{.3\linewidth}
		\centering
		\begin{forest}
			[CS[{France}[\fbox{Paris}][Nice][...]][US][...]]
		\end{forest}
		\caption{}
	\end{subfigure}
	\caption{Qtrees for (\ref{ex5:ldhc-neg}) = \textit{If Jo studied in \textcolor{blue}{\textbf{France}}, she did not study in \textcolor{orange}{\textbf{Europe}} or she studied in \textcolor{green}{\textbf{Paris}}.}} \label{trees:if-france-then-not-europe-or-paris}
\end{figure}

Crucially, the intersection operation between the consequent Qtree in Figure \ref{tree:not-europe-or-paris}, and the \textit{France} nodes in the Qtrees from Figure \ref{trees:france-2}, discarded the sections of the consequent Qtree that had to do with $\neg$\textit{Europe}. This does not violate \textsc{Q-Relevance}, but instead, causes the output Qtrees to be identical (and hence, equivalent) to Qtrees evoked by a formal simplification of (\ref{ex5:ldhc-neg}) that does not feature $\neg$\textit{Europe} as a disjunct in its consequent -- namely, (\ref{ex5:ldhc-neg-simplification}). Any Qtree derived from (\ref{ex5:ldhc-neg}) is thus \textsc{Q-Redundant}, and as a result, we correctly predict (\ref{ex5:ldhc-neg}) to be infelicitous.\\

In sum, \textsc{Q-Redundancy} predicts both kinds of LDHCs derived from LDHDs via the \textit{or-to-if} tautology to be infelicitous, in line with pre-theoretical intuitions about these sentences.




\subsubsection{LDHCs derived from HCs}

This reasoning extends to the LDHCs (\ref{ex5:ldhc-w-ns}) and (\ref{ex5:ldhc-ns-w}), whose trees are given in Fig. \ref{fig5:ldhc-non-scalar-w-ns} and \ref{fig5:ldhc-non-scalar-ns-w}. For (\ref{ex5:ldhc-w-ns}), \textsc{Q-Relevance} is satisfied because none of the verifying leaves from the consequent Qtree (cities different from Paris and Brussels) are cut across in the output Qtree. The feeling of redundancy in (\ref{ex5:ldhc-w-ns}) may come from the fact removing \textit{Brussels} from the sentence leads to the same overall meaning and Qtree.\footnote{Following \citet{HenotMortier2024a,HenotMortier2024b}, this implies that (\ref{ex5:ldhc-w-ns}) is \textsc{Q-Redundant}.} For (\ref{ex5:ldhc-ns-w}), \textsc{Q-Relevance} is violated because the compatible \textit{France} leaf from the consequent Qtree cannot ``fit'' into the city-level nodes introduced by the antecedent.


\begin{minipage}{.45\linewidth}
	\centering
	\begin{figure}[H]
		\centering
		\scalebox{.7}{
			\begin{forest}
				[CS[FR[Paris][\fbox{Nice}][\fbox{...}]][$\neg$FR/UK]]
		\end{forest}}
		\caption{Qtree for (\ref{ex5:ldhc-w-ns}).}\label{fig5:ldhc-non-scalar-w-ns}
	\end{figure}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
	\centering
	\begin{figure}[H]
		\centering
		\scalebox{.7}{
			\begin{forest}
				[CS[Paris][Brussels][\fbox{\begin{tabular}{c}
						FR$\wedge$Nice\\
						\textcolor{red}{$\subset$ FR}
				\end{tabular}}][...]]
		\end{forest}}
		\caption{Qtree for (\ref{ex5:ldhc-ns-w}).}\label{fig5:ldhc-non-scalar-ns-w}
	\end{figure}
\end{minipage}





An argument against this view comes from Long-Distance HCs (henceforth LDHC). Such structures, inspired from Long-Distance HDs (\cite{Marty2022}) and exemplified in (\ref{ex5:ldhc}), are derived from (\ref{ex5:hc-s}) by further disjoining \pplus{} with a proposition \r{} taken to be incompatible with \p. 


\begin{exe}
	\ex\label{ex5:ldhc-surface}
	\begin{xlist}
		\ex[?] {If Jo studied in \textcolor{blue}{France} she didn't study in \textcolor{orange}{Paris} or \textcolor{green}{Brussels}.\hfill \p$\rightarrow\neg$(\pplus$\vee$\r)}\label{ex5:ldhc-w-ns}
		\ex[\#] {If Jo didn't study in \textcolor{orange}{Paris} or \textcolor{green}{Brussels} she studied in \textcolor{blue}{France}.\hfill $\neg$(\pplus$\vee$\r)$\rightarrow$\p}\label{ex5:ldhc-ns-w}
	\end{xlist}
\end{exe}

Felicity-wise, LDHCs seem quite degraded: (\ref{ex5:ldhc-w-ns}) is felt to convey the same kind of information twice (because having studied in France contextually entails not having studied in Brussels), while (\ref{ex5:ldhc-ns-w})'s consequent feels independent from the subject matter raised by the antecedent. Yet neither (\ref{ex5:ldhc-w-ns}) nor (\ref{ex5:ldhc-ns-w}) are predicted to be SR, due to the presence of \r{}.

\begin{exe}
	\ex (\ref{ex5:ldhc-w-ns}) is not SR
	\begin{xlist}
		\ex {C = \pplus{} $\vee$\r. Take $D = \top$.\\\p{} $\rightarrow$ $\neg$((\pplus{} $\vee$ \r) $\wedge$ $D$) $\equiv$ \p{} $\rightarrow$ $\neg$(\pplus{} $\vee$ \r) $\not\equiv$ \p}
		\ex {C = \p. Take $D = \bot$.\\
			(\p{} $\wedge$ $D$) $\rightarrow$ $\neg$(\pplus{}$\vee$ \r) $\equiv$ (\p{} $\wedge$ $\bot$) $\rightarrow$ $\neg$(\pplus{}$\vee$ \r) $\equiv$ $\bot$ $\rightarrow$ $\neg$(\pplus{}$\vee$ \r) $\equiv$ $\top$ $\not\equiv$ $\neg$(\pplus{}$\vee$\r)} 
		\ex {C = \pplus. Take $D = \top$.\\
			\p{} $\rightarrow$ $\neg$((\pplus{}$\wedge$ $D$)$\vee$ \r) $\equiv$ \p{} $\rightarrow$ $\neg$(\pplus{}$\vee$ \r) $\equiv$ $\neg$\p{} $\vee$ ($\neg$\pplus{}$\wedge$$\neg$\r) $\equiv$ $\neg$\pplus{}$\wedge$(\p{}$\rightarrow$$\neg$\r) $\not\equiv$ \p{}$\rightarrow$$\neg$\r}
		\ex {C = \r. Take $D = \top$.\\
			\p{} $\rightarrow$ $\neg$(\pplus{}$\vee$(\r{} $\wedge$ $D$)) $\equiv$ \p{} $\rightarrow$ $\neg$(\pplus{}$\vee$ \r) $\equiv$ $\neg$\p{} $\vee$ ($\neg$\pplus{}$\wedge$$\neg$\r) $\equiv$ $\neg$\pplus{}$\wedge$(\p{}$\rightarrow$$\neg$\r) $\not\equiv$ \p{}$\rightarrow$$\neg$\pplus}
		\label{ex5:sr-ldhc-ws}
	\end{xlist}
	\ex (\ref{ex5:ldhc-ns-w}) is not SR
	\begin{xlist}
		\ex {C = \pplus{} $\vee$ \r. Take $D = \top$.\\ $\neg$((\pplus{} $\vee$ \r) $\wedge$ $D$) $\rightarrow$ \p{} $\equiv$ $\neg$(\pplus{} $\vee$ \r) $\rightarrow$ \p{} $\equiv$ \r{} $\vee$ \p{} $\not\equiv$ \p}
		\ex {C = \p. Take $D = \bot$.\\
			$\neg$(\pplus{}$\vee$ \r) $\rightarrow$ (\p{} $\wedge$ $D$) $\equiv$  $\neg$(\pplus{}$\vee$ \r)$\rightarrow$(\p{} $\wedge$ $\bot$)  $\equiv$ \pplus{}$\vee$ \r{} $\vee$ $\bot$ $\equiv$ \pplus{}$\vee$ \r{} $\not\equiv$ $\neg$(\pplus{}$\vee$\r)}
		\ex {C = \pplus. Take $D = \bot$.\\
			$\neg$((\pplus{} $\wedge$ $D$)$\vee$ \r) $\rightarrow$ \p{}  $\equiv$  $\neg$(\pplus{}$\vee$ \r)$\rightarrow$ \p{} $\equiv$ \pplus{}$\vee$ \r{} $\vee$ $\bot$ $\equiv$ \pplus{}$\vee$ \r{} $\not\equiv$ $\neg$(\pplus{}$\vee$\r)} \label{ex5:sr-ldhc-sw}
	\end{xlist}
\end{exe}

\begin{exe}
	\ex 
	\begin{xlist}
		\ex[\#] {Jo studied in \textcolor{orange}{Paris} or \textcolor{green}{Brussels} or she studied in \textcolor{blue}{France}. \hfill (\pplus$\vee$\r) $\vee$ \p}\label{ex5:ldhd-s-w}
		\ex[\#] {Jo studied in \textcolor{blue}{France} or she studied in \textcolor{orange}{Paris} or \textcolor{green}{Brussels}.\hfill \p{} $\vee$ (\pplus$\vee$\r)}\label{ex5:ldhd-w-s}
	\end{xlist}
\end{exe}



